MEMORY {
#RAM Addresses:
    # Zero page
    ZP: start = $00, size = $100, type = rw, define = yes, file = "";
		
	RAM:        start = $0320, size = $03E0, define = yes, file = "";
    C_STACK:    start = $0300, size = $0020, define = yes, file = "";
	OAM_BUF:    start = $0200, size = $0100, define = yes, file = "";
    PAL_BUF:    start = $0180, size = $0040, define = yes, file = "";
    VRAM_BUF:   start = $0700, size = $0100, define = yes, file = "";

    WRAM:       start = $6000, size = $2000, define = yes, file = "";

#INES Header:
    HEADER: start = $0, size = $10, file = %O ,fill = yes;


#ROM Addresses:
    ROM_M_00: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $00;
    ROM_M_01: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $01;
    ROM_M_02: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $02;
    ROM_M_03: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $03;
    ROM_M_04: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $04;
    ROM_M_05: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $05;
    ROM_M_06: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $06;
    ROM_M_07: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $07;
    ROM_M_08: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $08;
    ROM_M_09: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $09;
    ROM_M_0A: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $0A;
    ROM_M_0B: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $0B;
    ROM_M_0C: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $0C;
    ROM_M_0D: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $0D;
    ROM_M_0E: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $0E;
    ROM_M_0F: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $0F;
    ROM_M_10: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $10;
    ROM_M_11: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $11;
    ROM_M_12: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $12;
    ROM_M_13: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $13;
    ROM_M_14: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $14;
    ROM_M_15: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $15;
    ROM_M_16: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $16;
    ROM_M_17: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $17;
    ROM_M_18: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $18;
    ROM_M_19: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $19;
    ROM_M_1A: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $1A;
    ROM_M_1B: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $1B;
    ROM_M_1C: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $1C;
    ROM_M_1D: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $1D;
    ROM_M_1E: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $1E;
    ROM_M_1F: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $1F;
    ROM_M_20: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $20;
    ROM_M_21: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $21;
    ROM_M_22: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $22;
    ROM_M_23: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $23;
    ROM_M_24: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $24;
    ROM_M_25: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $25;
    ROM_M_26: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $26;
    ROM_M_27: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $27;
    ROM_M_28: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $28;
    ROM_M_29: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $29;
    ROM_M_2A: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $2A;
    ROM_M_2B: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $2B;
    ROM_M_2C: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $2C;
    ROM_M_2D: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $2D;
    ROM_M_2E: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $2E;
    ROM_M_2F: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $2F;
    ROM_M_30: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $30;
    ROM_M_31: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $31;
    ROM_M_32: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $32;
    ROM_M_33: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $33;
    ROM_M_34: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $34;
    ROM_M_35: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $35;
    ROM_M_36: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $36;
    ROM_M_37: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $37;
    ROM_M_38: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $38;
    ROM_M_39: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $39;
    ROM_M_3A: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $3A;
    ROM_M_3B: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $3B;
    ROM_M_3C: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $3C;
    ROM_M_3D: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $3D;
    ROM_M_3E: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $3E;
    ROM_M_3F: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $3F;
    ROM_M_40: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $40;
    ROM_M_41: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $41;
    ROM_M_42: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $42;
    ROM_M_43: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $43;
    ROM_M_44: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $44;
    ROM_M_45: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $45;
    ROM_M_46: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $46;
    ROM_M_47: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $47;
    ROM_M_48: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $48;
    ROM_M_49: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $49;
    ROM_M_4A: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $4A;
    ROM_M_4B: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $4B;
    ROM_M_4C: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $4C;
    ROM_M_4D: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $4D;
    ROM_M_4E: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $4E;
    ROM_M_4F: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $4F;
    ROM_M_50: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $50;
    ROM_M_51: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $51;
    ROM_M_52: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $52;
    ROM_M_53: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $53;
    ROM_M_54: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $54;
    ROM_M_55: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $55;
    ROM_M_56: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $56;
    ROM_M_57: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $57;
    ROM_M_58: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $58;
    ROM_M_59: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $59;
    ROM_M_5A: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $5A;
    ROM_M_5B: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $5B;
    ROM_M_5C: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $5C;
    ROM_M_5D: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $5D;
    ROM_M_5E: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $5E;
    ROM_M_5F: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $5F;
    ROM_M_60: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $60;
    ROM_M_61: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $61;
    ROM_M_62: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $62;
    ROM_M_63: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $63;
    ROM_M_64: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $64;
    ROM_M_65: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $65;
    ROM_M_66: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $66;
    ROM_M_67: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $67;
    ROM_M_68: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $68;
    ROM_M_69: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $69;
    ROM_M_6A: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $6A;
    ROM_M_6B: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $6B;
    ROM_M_6C: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $6C;
    ROM_M_6D: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $6D;
    ROM_M_6E: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $6E;
    ROM_M_6F: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $6F;
    ROM_M_70: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $70;
    ROM_M_71: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $71;
    ROM_M_72: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $72;
    ROM_M_73: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $73;
    ROM_M_74: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $74;
    ROM_M_75: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $75;
    ROM_M_76: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $76;
    ROM_M_77: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $77;
    ROM_M_78: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $78;
    ROM_M_79: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $79;
    ROM_M_7A: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $7A;
    ROM_M_7B: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $7B;
    ROM_M_7C: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $7C;
    ROM_M_7D: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $7D;
    ROM_M_7E: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $7E;
    ROM_M_7F: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $7F;
    ROM_M_80: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $80;
    ROM_M_81: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $81;
    ROM_M_82: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $82;
    ROM_M_83: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $83;
    ROM_M_84: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $84;
    ROM_M_85: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $85;
    ROM_M_86: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $86;
    ROM_M_87: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $87;
    ROM_M_88: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $88;
    ROM_M_89: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $89;
    ROM_M_8A: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $8A;
    ROM_M_8B: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $8B;
    ROM_M_8C: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $8C;
    ROM_M_8D: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $8D;
    ROM_M_8E: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $8E;
    ROM_M_8F: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $8F;
    ROM_M_90: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $90;
    ROM_M_91: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $91;
    ROM_M_92: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $92;
    ROM_M_93: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $93;
    ROM_M_94: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $94;
    ROM_M_95: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $95;
    ROM_M_96: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $96;
    ROM_M_97: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $97;
    ROM_M_98: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $98;
    ROM_M_99: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $99;
    ROM_M_9A: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $9A;
    ROM_M_9B: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $9B;
    ROM_M_9C: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $9C;
    ROM_M_9D: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $9D;
    ROM_M_9E: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $9E;
    ROM_M_9F: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $9F;
    ROM_M_A0: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $A0;
    ROM_M_A1: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $A1;
    ROM_M_A2: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $A2;
    ROM_M_A3: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $A3;
    ROM_M_A4: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $A4;
    ROM_M_A5: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $A5;
    ROM_M_A6: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $A6;
    ROM_M_A7: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $A7;
    ROM_M_A8: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $A8;
    ROM_M_A9: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $A9;
    ROM_M_AA: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $AA;
    ROM_M_AB: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $AB;
    ROM_M_AC: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $AC;
    ROM_M_AD: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $AD;
    ROM_M_AE: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $AE;
    ROM_M_AF: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $AF;
    ROM_M_B0: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $B0;
    ROM_M_B1: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $B1;
    ROM_M_B2: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $B2;
    ROM_M_B3: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $B3;
    ROM_M_B4: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $B4;
    ROM_M_B5: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $B5;
    ROM_M_B6: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $B6;
    ROM_M_B7: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $B7;
    ROM_M_B8: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $B8;
    ROM_M_B9: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $B9;
    ROM_M_BA: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $BA;
    ROM_M_BB: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $BB;
    ROM_M_BC: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $BC;
    ROM_M_BD: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $BD;
    ROM_M_BE: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $BE;
    ROM_M_BF: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $BF;
    ROM_M_C0: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $C0;
    ROM_M_C1: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $C1;
    ROM_M_C2: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $C2;
    ROM_M_C3: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $C3;
    ROM_M_C4: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $C4;
    ROM_M_C5: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $C5;
    ROM_M_C6: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $C6;
    ROM_M_C7: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $C7;
    ROM_M_C8: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $C8;
    ROM_M_C9: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $C9;
    ROM_M_CA: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $CA;
    ROM_M_CB: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $CB;
    ROM_M_CC: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $CC;
    ROM_M_CD: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $CD;
    ROM_M_CE: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $CE;
    ROM_M_CF: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $CF;
    ROM_M_D0: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $D0;
    ROM_M_D1: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $D1;
    ROM_M_D2: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $D2;
    ROM_M_D3: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $D3;
    ROM_M_D4: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $D4;
    ROM_M_D5: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $D5;
    ROM_M_D6: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $D6;
    ROM_M_D7: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $D7;
    ROM_M_D8: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $D8;
    ROM_M_D9: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $D9;
    ROM_M_DA: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $DA;
    ROM_M_DB: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $DB;
    ROM_M_DC: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $DC;
    ROM_M_DD: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $DD;
    ROM_M_DE: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $DE;
    ROM_M_DF: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $DF;
    ROM_M_E0: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $E0;
    ROM_M_E1: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $E1;
    ROM_M_E2: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $E2;
    ROM_M_E3: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $E3;
    ROM_M_E4: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $E4;
    ROM_M_E5: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $E5;
    ROM_M_E6: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $E6;
    ROM_M_E7: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $E7;
    ROM_M_E8: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $E8;
    ROM_M_E9: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $E9;
    ROM_M_EA: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $EA;
    ROM_M_EB: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $EB;
    ROM_M_EC: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $EC;
    ROM_M_ED: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $ED;
    ROM_M_EE: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $EE;
    ROM_M_EF: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $EF;
    ROM_M_F0: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $F0;
    ROM_M_F1: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $F1;
    ROM_M_F2: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $F2;
    ROM_M_F3: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $F3;
    ROM_M_F4: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $F4;
    ROM_M_F5: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $F5;
    ROM_M_F6: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $F6;
    ROM_M_F7: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $F7;
    ROM_M_F8: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $F8;
    ROM_M_F9: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $F9;
    ROM_M_FA: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $FA;
    ROM_M_FB: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $FB;
    ROM_M_FC: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $FC;
    ROM_M_FD: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $FD;
    # MMC3 uses exclusively 8kb banks, so we have to break up the 16kb of fixed storage, too.
    PRG:    start = $8000, size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $00;
    PRG_2:  start = $e000, size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes;
 


#64 Banks of 8K CHR ROM
    GAMECHR: start = $0000, size = $1c000, file = %O, fill = yes;
    PARALLAXCHR: start = $0000, size = $24000, file = %O, fill = yes, bank = $70;
}




SEGMENTS {
    HEADER:   load = HEADER, type = ro, define = yes;
	COLLMAP0: load = WRAM,	 type = bss, start = $6000, define = yes;
	WRAM_SL0: load = WRAM,	 type = bss, start = $60F0, define = yes, optional = yes;
	COLLMAP1: load = WRAM,	 type = bss, start = $6100, define = yes;
	WRAM_SL1: load = WRAM,	 type = bss, start = $61F0, define = yes, optional = yes;
    COLLMAP2: load = WRAM,	 type = bss, start = $6200, define = yes;
	WRAM_SL2: load = WRAM,	 type = bss, start = $62F0, define = yes, optional = yes;
	COLLMAP3: load = WRAM,	 type = bss, start = $6300, define = yes;
	WRAM_SL3: load = WRAM,	 type = bss, start = $63F0, define = yes, optional = yes;
    SRAM:     load = WRAM,   type = rw,  align = $0100, define = yes;
    IRQ_T:    load = WRAM,   type = bss, start = $7FC0, define = yes;
    # Banks for mmc3 are split into two groups: 
    # A: The first 8kb section in memory
    # B: The second 8kb section in memory.
    # You can only put banks from section A into the first memory bank, and banks from section B into the second.
    DAT_BANK_00:   load = ROM_M_00, type = ro, optional = yes;
    DAT_BANK_01:   load = ROM_M_01, type = ro, optional = yes;
    DAT_BANK_02:   load = ROM_M_02, type = ro, optional = yes;
    DAT_BANK_03:   load = ROM_M_03, type = ro, optional = yes;
    DAT_BANK_04:   load = ROM_M_04, type = ro, optional = yes;
    DAT_BANK_05:   load = ROM_M_05, type = ro, optional = yes;
    DAT_BANK_06:   load = ROM_M_06, type = ro, optional = yes;
    DAT_BANK_07:   load = ROM_M_07, type = ro, optional = yes;
    DAT_BANK_08:   load = ROM_M_08, type = ro, optional = yes;
    DAT_BANK_09:   load = ROM_M_09, type = ro, optional = yes;
    DAT_BANK_0A:   load = ROM_M_0A, type = ro, optional = yes;
    DAT_BANK_0B:   load = ROM_M_0B, type = ro, optional = yes;
    DAT_BANK_0C:   load = ROM_M_0C, type = ro, optional = yes;
    DAT_BANK_0D:   load = ROM_M_0D, type = ro, optional = yes;
    DAT_BANK_0E:   load = ROM_M_0E, type = ro, optional = yes;
    DAT_BANK_0F:   load = ROM_M_0F, type = ro, optional = yes;
    DAT_BANK_10:   load = ROM_M_10, type = ro, optional = yes;
    DAT_BANK_11:   load = ROM_M_11, type = ro, optional = yes;
    DAT_BANK_12:   load = ROM_M_12, type = ro, optional = yes;
    DAT_BANK_13:   load = ROM_M_13, type = ro, optional = yes;
    DAT_BANK_14:   load = ROM_M_14, type = ro, optional = yes;
    DAT_BANK_15:   load = ROM_M_15, type = ro, optional = yes;
    DAT_BANK_16:   load = ROM_M_16, type = ro, optional = yes;
    DAT_BANK_17:   load = ROM_M_17, type = ro, optional = yes;
    DAT_BANK_18:   load = ROM_M_18, type = ro, optional = yes;
    DAT_BANK_19:   load = ROM_M_19, type = ro, optional = yes;
    DAT_BANK_1A:   load = ROM_M_1A, type = ro, optional = yes;
    DAT_BANK_1B:   load = ROM_M_1B, type = ro, optional = yes;
    DAT_BANK_1C:   load = ROM_M_1C, type = ro, optional = yes;
    DAT_BANK_1D:   load = ROM_M_1D, type = ro, optional = yes;
    DAT_BANK_1E:   load = ROM_M_1E, type = ro, optional = yes;
    DAT_BANK_1F:   load = ROM_M_1F, type = ro, optional = yes;
    DAT_BANK_20:   load = ROM_M_20, type = ro, optional = yes;
    DAT_BANK_21:   load = ROM_M_21, type = ro, optional = yes;
    DAT_BANK_22:   load = ROM_M_22, type = ro, optional = yes;
    DAT_BANK_23:   load = ROM_M_23, type = ro, optional = yes;
    DAT_BANK_24:   load = ROM_M_24, type = ro, optional = yes;
    DAT_BANK_25:   load = ROM_M_25, type = ro, optional = yes;
    DAT_BANK_26:   load = ROM_M_26, type = ro, optional = yes;
    DAT_BANK_27:   load = ROM_M_27, type = ro, optional = yes;
    DAT_BANK_28:   load = ROM_M_28, type = ro, optional = yes;
    DAT_BANK_29:   load = ROM_M_29, type = ro, optional = yes;
    DAT_BANK_2A:   load = ROM_M_2A, type = ro, optional = yes;
    DAT_BANK_2B:   load = ROM_M_2B, type = ro, optional = yes;
    DAT_BANK_2C:   load = ROM_M_2C, type = ro, optional = yes;
    DAT_BANK_2D:   load = ROM_M_2D, type = ro, optional = yes;
    DAT_BANK_2E:   load = ROM_M_2E, type = ro, optional = yes;
    DAT_BANK_2F:   load = ROM_M_2F, type = ro, optional = yes;
    DAT_BANK_30:   load = ROM_M_30, type = ro, optional = yes;
    DAT_BANK_31:   load = ROM_M_31, type = ro, optional = yes;
    DAT_BANK_32:   load = ROM_M_32, type = ro, optional = yes;
    DAT_BANK_33:   load = ROM_M_33, type = ro, optional = yes;
    DAT_BANK_34:   load = ROM_M_34, type = ro, optional = yes;
    DAT_BANK_35:   load = ROM_M_35, type = ro, optional = yes;
    DAT_BANK_36:   load = ROM_M_36, type = ro, optional = yes;
    DAT_BANK_37:   load = ROM_M_37, type = ro, optional = yes;
    DAT_BANK_38:   load = ROM_M_38, type = ro, optional = yes;
    DAT_BANK_39:   load = ROM_M_39, type = ro, optional = yes;
    DAT_BANK_3A:   load = ROM_M_3A, type = ro, optional = yes;
    DAT_BANK_3B:   load = ROM_M_3B, type = ro, optional = yes;
    DAT_BANK_3C:   load = ROM_M_3C, type = ro, optional = yes;
    DAT_BANK_3D:   load = ROM_M_3D, type = ro, optional = yes;
    DAT_BANK_3E:   load = ROM_M_3E, type = ro, optional = yes;
    DAT_BANK_3F:   load = ROM_M_3F, type = ro, optional = yes;
    DAT_BANK_40:   load = ROM_M_40, type = ro, optional = yes;
    DAT_BANK_41:   load = ROM_M_41, type = ro, optional = yes;
    DAT_BANK_42:   load = ROM_M_42, type = ro, optional = yes;
    DAT_BANK_43:   load = ROM_M_43, type = ro, optional = yes;
    DAT_BANK_44:   load = ROM_M_44, type = ro, optional = yes;
    DAT_BANK_45:   load = ROM_M_45, type = ro, optional = yes;
    DAT_BANK_46:   load = ROM_M_46, type = ro, optional = yes;
    DAT_BANK_47:   load = ROM_M_47, type = ro, optional = yes;
    DAT_BANK_48:   load = ROM_M_48, type = ro, optional = yes;
    DAT_BANK_49:   load = ROM_M_49, type = ro, optional = yes;
    DAT_BANK_4A:   load = ROM_M_4A, type = ro, optional = yes;
    DAT_BANK_4B:   load = ROM_M_4B, type = ro, optional = yes;
    DAT_BANK_4C:   load = ROM_M_4C, type = ro, optional = yes;
    DAT_BANK_4D:   load = ROM_M_4D, type = ro, optional = yes;
    DAT_BANK_4E:   load = ROM_M_4E, type = ro, optional = yes;
    DAT_BANK_4F:   load = ROM_M_4F, type = ro, optional = yes;
    DAT_BANK_50:   load = ROM_M_50, type = ro, optional = yes;
    DAT_BANK_51:   load = ROM_M_51, type = ro, optional = yes;
    DAT_BANK_52:   load = ROM_M_52, type = ro, optional = yes;
    DAT_BANK_53:   load = ROM_M_53, type = ro, optional = yes;
    DAT_BANK_54:   load = ROM_M_54, type = ro, optional = yes;
    DAT_BANK_55:   load = ROM_M_55, type = ro, optional = yes;
    DAT_BANK_56:   load = ROM_M_56, type = ro, optional = yes;
    DAT_BANK_57:   load = ROM_M_57, type = ro, optional = yes;
    DAT_BANK_58:   load = ROM_M_58, type = ro, optional = yes;
    DAT_BANK_59:   load = ROM_M_59, type = ro, optional = yes;
    DAT_BANK_5A:   load = ROM_M_5A, type = ro, optional = yes;
    DAT_BANK_5B:   load = ROM_M_5B, type = ro, optional = yes;
    DAT_BANK_5C:   load = ROM_M_5C, type = ro, optional = yes;
    DAT_BANK_5D:   load = ROM_M_5D, type = ro, optional = yes;
    DAT_BANK_5E:   load = ROM_M_5E, type = ro, optional = yes;
    DAT_BANK_5F:   load = ROM_M_5F, type = ro, optional = yes;
    DAT_BANK_60:   load = ROM_M_60, type = ro, optional = yes;
    DAT_BANK_61:   load = ROM_M_61, type = ro, optional = yes;
    DAT_BANK_62:   load = ROM_M_62, type = ro, optional = yes;
    DAT_BANK_63:   load = ROM_M_63, type = ro, optional = yes;
    DAT_BANK_64:   load = ROM_M_64, type = ro, optional = yes;
    DAT_BANK_65:   load = ROM_M_65, type = ro, optional = yes;
    DAT_BANK_66:   load = ROM_M_66, type = ro, optional = yes;
    DAT_BANK_67:   load = ROM_M_67, type = ro, optional = yes;
    DAT_BANK_68:   load = ROM_M_68, type = ro, optional = yes;
    DAT_BANK_69:   load = ROM_M_69, type = ro, optional = yes;
    DAT_BANK_6A:   load = ROM_M_6A, type = ro, optional = yes;
    DAT_BANK_6B:   load = ROM_M_6B, type = ro, optional = yes;
    DAT_BANK_6C:   load = ROM_M_6C, type = ro, optional = yes;
    DAT_BANK_6D:   load = ROM_M_6D, type = ro, optional = yes;
    DAT_BANK_6E:   load = ROM_M_6E, type = ro, optional = yes;
    DAT_BANK_6F:   load = ROM_M_6F, type = ro, optional = yes;
    DAT_BANK_70:   load = ROM_M_70, type = ro, optional = yes;
    DAT_BANK_71:   load = ROM_M_71, type = ro, optional = yes;
    DAT_BANK_72:   load = ROM_M_72, type = ro, optional = yes;
    DAT_BANK_73:   load = ROM_M_73, type = ro, optional = yes;
    DAT_BANK_74:   load = ROM_M_74, type = ro, optional = yes;
    DAT_BANK_75:   load = ROM_M_75, type = ro, optional = yes;
    DAT_BANK_76:   load = ROM_M_76, type = ro, optional = yes;
    DAT_BANK_77:   load = ROM_M_77, type = ro, optional = yes;
    DAT_BANK_78:   load = ROM_M_78, type = ro, optional = yes;
    DAT_BANK_79:   load = ROM_M_79, type = ro, optional = yes;
    DAT_BANK_7A:   load = ROM_M_7A, type = ro, optional = yes;
    DAT_BANK_7B:   load = ROM_M_7B, type = ro, optional = yes;
    DAT_BANK_7C:   load = ROM_M_7C, type = ro, optional = yes;
    DAT_BANK_7D:   load = ROM_M_7D, type = ro, optional = yes;
    DAT_BANK_7E:   load = ROM_M_7E, type = ro, optional = yes;
    DAT_BANK_7F:   load = ROM_M_7F, type = ro, optional = yes;
    DAT_BANK_80:   load = ROM_M_80, type = ro, optional = yes;
    DAT_BANK_81:   load = ROM_M_81, type = ro, optional = yes;
    DAT_BANK_82:   load = ROM_M_82, type = ro, optional = yes;
    DAT_BANK_83:   load = ROM_M_83, type = ro, optional = yes;
    DAT_BANK_84:   load = ROM_M_84, type = ro, optional = yes;
    DAT_BANK_85:   load = ROM_M_85, type = ro, optional = yes;
    DAT_BANK_86:   load = ROM_M_86, type = ro, optional = yes;
    DAT_BANK_87:   load = ROM_M_87, type = ro, optional = yes;
    DAT_BANK_88:   load = ROM_M_88, type = ro, optional = yes;
    DAT_BANK_89:   load = ROM_M_89, type = ro, optional = yes;
    DAT_BANK_8A:   load = ROM_M_8A, type = ro, optional = yes;
    DAT_BANK_8B:   load = ROM_M_8B, type = ro, optional = yes;
    DAT_BANK_8C:   load = ROM_M_8C, type = ro, optional = yes;
    DAT_BANK_8D:   load = ROM_M_8D, type = ro, optional = yes;
    DAT_BANK_8E:   load = ROM_M_8E, type = ro, optional = yes;
    DAT_BANK_8F:   load = ROM_M_8F, type = ro, optional = yes;
    DAT_BANK_90:   load = ROM_M_90, type = ro, optional = yes;
    DAT_BANK_91:   load = ROM_M_91, type = ro, optional = yes;
    DAT_BANK_92:   load = ROM_M_92, type = ro, optional = yes;
    DAT_BANK_93:   load = ROM_M_93, type = ro, optional = yes;
    DAT_BANK_94:   load = ROM_M_94, type = ro, optional = yes;
    DAT_BANK_95:   load = ROM_M_95, type = ro, optional = yes;
    DAT_BANK_96:   load = ROM_M_96, type = ro, optional = yes;
    DAT_BANK_97:   load = ROM_M_97, type = ro, optional = yes;
    DAT_BANK_98:   load = ROM_M_98, type = ro, optional = yes;
    DAT_BANK_99:   load = ROM_M_99, type = ro, optional = yes;
    DAT_BANK_9A:   load = ROM_M_9A, type = ro, optional = yes;
    DAT_BANK_9B:   load = ROM_M_9B, type = ro, optional = yes;
    DAT_BANK_9C:   load = ROM_M_9C, type = ro, optional = yes;
    DAT_BANK_9D:   load = ROM_M_9D, type = ro, optional = yes;
    DAT_BANK_9E:   load = ROM_M_9E, type = ro, optional = yes;
    DAT_BANK_9F:   load = ROM_M_9F, type = ro, optional = yes;
    DAT_BANK_A0:   load = ROM_M_A0, type = ro, optional = yes;
    DAT_BANK_A1:   load = ROM_M_A1, type = ro, optional = yes;
    DAT_BANK_A2:   load = ROM_M_A2, type = ro, optional = yes;
    DAT_BANK_A3:   load = ROM_M_A3, type = ro, optional = yes;
    DAT_BANK_A4:   load = ROM_M_A4, type = ro, optional = yes;
    DAT_BANK_A5:   load = ROM_M_A5, type = ro, optional = yes;
    DAT_BANK_A6:   load = ROM_M_A6, type = ro, optional = yes;
    DAT_BANK_A7:   load = ROM_M_A7, type = ro, optional = yes;
    DAT_BANK_A8:   load = ROM_M_A8, type = ro, optional = yes;
    DAT_BANK_A9:   load = ROM_M_A9, type = ro, optional = yes;
    DAT_BANK_AA:   load = ROM_M_AA, type = ro, optional = yes;
    DAT_BANK_AB:   load = ROM_M_AB, type = ro, optional = yes;
    DAT_BANK_AC:   load = ROM_M_AC, type = ro, optional = yes;
    DAT_BANK_AD:   load = ROM_M_AD, type = ro, optional = yes;
    DAT_BANK_AE:   load = ROM_M_AE, type = ro, optional = yes;
    DAT_BANK_AF:   load = ROM_M_AF, type = ro, optional = yes;
    DAT_BANK_B0:   load = ROM_M_B0, type = ro, optional = yes;
    DAT_BANK_B1:   load = ROM_M_B1, type = ro, optional = yes;
    DAT_BANK_B2:   load = ROM_M_B2, type = ro, optional = yes;
    DAT_BANK_B3:   load = ROM_M_B3, type = ro, optional = yes;
    DAT_BANK_B4:   load = ROM_M_B4, type = ro, optional = yes;
    DAT_BANK_B5:   load = ROM_M_B5, type = ro, optional = yes;
    DAT_BANK_B6:   load = ROM_M_B6, type = ro, optional = yes;
    DAT_BANK_B7:   load = ROM_M_B7, type = ro, optional = yes;
    DAT_BANK_B8:   load = ROM_M_B8, type = ro, optional = yes;
    DAT_BANK_B9:   load = ROM_M_B9, type = ro, optional = yes;
    DAT_BANK_BA:   load = ROM_M_BA, type = ro, optional = yes;
    DAT_BANK_BB:   load = ROM_M_BB, type = ro, optional = yes;
    DAT_BANK_BC:   load = ROM_M_BC, type = ro, optional = yes;
    DAT_BANK_BD:   load = ROM_M_BD, type = ro, optional = yes;
    DAT_BANK_BE:   load = ROM_M_BE, type = ro, optional = yes;
    DAT_BANK_BF:   load = ROM_M_BF, type = ro, optional = yes;
    DAT_BANK_C0:   load = ROM_M_C0, type = ro, optional = yes;
    DAT_BANK_C1:   load = ROM_M_C1, type = ro, optional = yes;
    DAT_BANK_C2:   load = ROM_M_C2, type = ro, optional = yes;
    DAT_BANK_C3:   load = ROM_M_C3, type = ro, optional = yes;
    DAT_BANK_C4:   load = ROM_M_C4, type = ro, optional = yes;
    DAT_BANK_C5:   load = ROM_M_C5, type = ro, optional = yes;
    DAT_BANK_C6:   load = ROM_M_C6, type = ro, optional = yes;
    DAT_BANK_C7:   load = ROM_M_C7, type = ro, optional = yes;
    DAT_BANK_C8:   load = ROM_M_C8, type = ro, optional = yes;
    DAT_BANK_C9:   load = ROM_M_C9, type = ro, optional = yes;
    DAT_BANK_CA:   load = ROM_M_CA, type = ro, optional = yes;
    DAT_BANK_CB:   load = ROM_M_CB, type = ro, optional = yes;
    DAT_BANK_CC:   load = ROM_M_CC, type = ro, optional = yes;
    DAT_BANK_CD:   load = ROM_M_CD, type = ro, optional = yes;
    DAT_BANK_CE:   load = ROM_M_CE, type = ro, optional = yes;
    DAT_BANK_CF:   load = ROM_M_CF, type = ro, optional = yes;
    DAT_BANK_D0:   load = ROM_M_D0, type = ro, optional = yes;
    DAT_BANK_D1:   load = ROM_M_D1, type = ro, optional = yes;
    DAT_BANK_D2:   load = ROM_M_D2, type = ro, optional = yes;
    DAT_BANK_D3:   load = ROM_M_D3, type = ro, optional = yes;
    DAT_BANK_D4:   load = ROM_M_D4, type = ro, optional = yes;
    DAT_BANK_D5:   load = ROM_M_D5, type = ro, optional = yes;
    DAT_BANK_D6:   load = ROM_M_D6, type = ro, optional = yes;
    DAT_BANK_D7:   load = ROM_M_D7, type = ro, optional = yes;
    DAT_BANK_D8:   load = ROM_M_D8, type = ro, optional = yes;
    DAT_BANK_D9:   load = ROM_M_D9, type = ro, optional = yes;
    DAT_BANK_DA:   load = ROM_M_DA, type = ro, optional = yes;
    DAT_BANK_DB:   load = ROM_M_DB, type = ro, optional = yes;
    DAT_BANK_DC:   load = ROM_M_DC, type = ro, optional = yes;
    DAT_BANK_DD:   load = ROM_M_DD, type = ro, optional = yes;
    DAT_BANK_DE:   load = ROM_M_DE, type = ro, optional = yes;
    DAT_BANK_DF:   load = ROM_M_DF, type = ro, optional = yes;
    DAT_BANK_E0:   load = ROM_M_E0, type = ro, optional = yes;
    DAT_BANK_E1:   load = ROM_M_E1, type = ro, optional = yes;
    DAT_BANK_E2:   load = ROM_M_E2, type = ro, optional = yes;
    DAT_BANK_E3:   load = ROM_M_E3, type = ro, optional = yes;
    DAT_BANK_E4:   load = ROM_M_E4, type = ro, optional = yes;
    DAT_BANK_E5:   load = ROM_M_E5, type = ro, optional = yes;
    DAT_BANK_E6:   load = ROM_M_E6, type = ro, optional = yes;
    DAT_BANK_E7:   load = ROM_M_E7, type = ro, optional = yes;
    DAT_BANK_E8:   load = ROM_M_E8, type = ro, optional = yes;
    DAT_BANK_E9:   load = ROM_M_E9, type = ro, optional = yes;
    DAT_BANK_EA:   load = ROM_M_EA, type = ro, optional = yes;
    DAT_BANK_EB:   load = ROM_M_EB, type = ro, optional = yes;
    DAT_BANK_EC:   load = ROM_M_EC, type = ro, optional = yes;
    DAT_BANK_ED:   load = ROM_M_ED, type = ro, optional = yes;
    DAT_BANK_EE:   load = ROM_M_EE, type = ro, optional = yes;
    DAT_BANK_EF:   load = ROM_M_EF, type = ro, optional = yes;
    DAT_BANK_F0:   load = ROM_M_F0, type = ro, optional = yes;
    DAT_BANK_F1:   load = ROM_M_F1, type = ro, optional = yes;
    DAT_BANK_F2:   load = ROM_M_F2, type = ro, optional = yes;
    DAT_BANK_F3:   load = ROM_M_F3, type = ro, optional = yes;
	
    SFX_BANK:      load = ROM_M_F4, type = ro, optional = yes;

    PCM_BANK_B:    load = ROM_M_F5, type = ro, optional = yes;
    PCM_BANK:      load = ROM_M_F6, type = ro, optional = yes;

    XCD_BANK_06:   load = ROM_M_F7, type = ro, optional = yes;
    XCD_BANK_05:   load = ROM_M_F8, type = ro, optional = yes;
    XCD_BANK_04:   load = ROM_M_F9, type = ro, optional = yes;
    XCD_BANK_03:   load = ROM_M_FA, type = ro, optional = yes;
    XCD_BANK_02:   load = ROM_M_FB, type = ro, optional = yes;
    XCD_BANK_01:   load = ROM_M_FC, type = ro, optional = yes;
    XCD_BANK_00:   load = ROM_M_FD, type = ro, optional = yes;

    # Fixed banks
    TVDETECT: load = PRG, type = ro, define = yes, optional = yes, align = $20;
    CODE:     load = PRG, type = ro, define = yes, optional = yes;
    RODATA:   load = PRG, type = ro, define = yes, optional = yes;
    DATA:     load = ROM_M_29, run = RAM, type = rw, define = yes, optional = yes;
    OAMALIGN: load = PRG_2, type = ro, define = yes, start = $e000;
    STARTUP:  load = PRG_2, type = ro, define = yes;
    NESLIB:   load = PRG_2, type = ro, define = yes;
    NESDOUG:  load = PRG_2, type = ro, define = yes;
    SND_DRV:  load = PRG_2, type = ro, define = yes;
    CODE_2:   load = PRG_2, type = ro, define = yes, optional = yes;
    RODATA_2: load = PRG_2, type = ro, define = yes, optional = yes;
    VECTORS:  load = PRG_2, start = $fffa, type = ro;

    GAMECHR:      load = GAMECHR, type = ro;
    PARALLAXCHR:  load = PARALLAXCHR, type = ro;

    BSS:      load = RAM,            type = bss, define = yes;
    ZEROPAGE: load = ZP,             type = zp;
	
}




#removed CONDES features




SYMBOLS {
    MAPPER:         type = weak, value = 4;     # 4 = MMC3
    SUBMAPPER:      type = weak, value = 0;     # Standard
    MIRRORING:      type = weak, value = 8;     # 0, 1 = doesn't matter (its an MMC3 register), 8 = hardwired 4-screen 
    PRG_BANK_COUNT: type = weak, value = 128;    # 16k PRG chunk count
    CHR_BANK_COUNT: type = weak, value = 32;    # 8k CHR chunk count
    SRAM:           type = weak, value = 1;     # 1 = battery backed SRAM at $6000-7FFF
    TRAINER:        type = weak, value = 0;     # unneeded
    CONSOLE_TYPE:   type = weak, value = 0;     # Standard NES/Famicom
    PRG_RAM_COUNT:  type = weak, value = 0;     # None (it's all non-volatile)
    PRG_NVRAM_COUNT:type = weak, value = 7;     # 64 << 7 = 8K
    CHR_RAM_COUNT:  type = weak, value = 0;     # None
    CHR_NVRAM_COUNT:type = weak, value = 0;     # 
    CPU_PPU_TIMING: type = weak, value = 2;     # Multiregion
    HARDWARE_TYPE:  type = weak, value = 0;     # Unused
    MISC_ROMS:      type = weak, value = 0;     # No misc ROMs
    DEF_EXP_DEVICE: type = weak, value = 0;     # Unspecified

    __DATA_LOAD_BANK__: type = export, value = $29;
}

